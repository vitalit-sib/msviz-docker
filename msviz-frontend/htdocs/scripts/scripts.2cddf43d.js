"use strict";angular.module("thirdparties",[]).service("_",["$window",function(a){return a._}]).service("d3",["$window",function(a){return a.d3}]).service("fishtones",["$window",function(a){return a.fishtones}]).service("pviz",["$window",function(a){return a.pviz}]),angular.module("msvizUiApp",["ngAnimate","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngTouch","ui.select","thirdparties","environment","matches","sequences","experimental"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("msvizUiApp").controller("MainCtrl",["$scope","$q","_","searchService","psmService","SearchIdSet","matchesProteinRefService","sequenceService",function(a,b,c,d,e,f,g,h){d.list().then(function(b){a.searches.all=b.searchIds}),a.searches={selected:[]},a.proteinRefs={},a.proteinMatch={},a.$watch("searches.selected",function(b){void 0!==b&&0!==c.size(b)&&(a.searchIdSet=(new f).add(b),g.findBySearchId(b[0]).then(function(b){a.proteinRefs.all=b}))}),a.showProtein=function(){b.all([h.get(a.proteinRefs.selected.AC,a.proteinRefs.selected.source),e.findAllBySearchIdsAndProteinId(a.searchIdSet,a.proteinRefs.selected.AC)]).then(function(b){a.proteinMatch.protein=b[0],a.proteinMatch.psms=b[1]})}}]),angular.module("environment",["angularytics"]).config(["AngularyticsProvider",function(a){a.setEventHandlers(["Console","GoogleUniversal"])}]).service("EnvConfig",["$location","Angularytics",function(a,b){var c=80===a.$$port;return c?{isProd:!0,backendUrl:"http://msviz.vital-it.ch/backend"}:{isProd:!1,backendUrl:"http://localhost:9000"}}]).service("httpProxy",["$http","EnvConfig",function(a,b){var c=function(){return this};return c.prototype.get=function(c,d){return a.get(b.backendUrl+c,d).then(function(a){return a.data})},new c}]).directive("swaggerDoc",["EnvConfig",function(a){return{restrict:"EA",template:'<a href="'+a.backendUrl+'/docs/index.html">backend REST doc</a>'}}]),angular.module("matches",["thirdparties","environment"]),angular.module("matches").service("psmService",["$http","EnvConfig","httpProxy",function(a,b,c){var d=function(){return this};return d.prototype.findAllBySearchIdsAndProteinId=function(a,b){return c.get("/match/psms/"+a.list().join(",")+"/by-ac/"+b)},new d}]).service("pvizCustomPsm",["pviz",function(a){a.FeatureDisplayer.trackHeightPerCategoryType.psms=.4,a.FeatureDisplayer.setCustomHandler("psm",{appender:function(a,b,c,d){var e=b.selectAll("g.feature.internal.data."+d).data(c).enter().append("g").attr("class","feature internal data "+d);return e.append("line"),e},positioner:function(a,b){return b.attr("transform",function(b){return"translate(0,"+.4*a.scales.y(.5+b.displayTrack)+")"}),b.selectAll("line").attr("x1",function(b){return a.scales.x(b.start-.4)}).attr("x2",function(b){return a.scales.x(b.end+.4)}),b}})}]).factory("MatchesPsmPvizView",["_","pviz","pvizCustomPsm",function(a,b,c){var d=function(c,d,e){var f=this,g=new b.SeqEntry({sequence:d.sequence}),h=new b.SeqEntryAnnotInteractiveView({model:g,el:c});h.render();var i=a.map(e,function(a){return{groupSet:a.searchId,category:"psms",categoryName:"",type:"psm",start:a.proteinList[0].startPos-1,end:a.proteinList[0].endPos-1,data:a}});return g.addFeatures(i),f};return d}]).directive("matchesPsmPviz",["pviz","MatchesPsmPvizView",function(a,b){var c=function(c,d){a.FeatureDisplayer.addMouseoverCallback(["psm"],function(a){c.detailedPSM!==a.data&&(c.detailedPSM=a.data,c.$apply())}),a.FeatureDisplayer.addClickCallback(["psm"],function(a){c.$broadcast("psmAddSelected",a.data)}),c.$watch("proteinMatch.psms",function(){if(void 0!==c.proteinMatch.protein){new b(d,c.proteinMatch.protein,c.proteinMatch.psms)}})};return{restrict:"E",object:{proteinMatch:"="},link:c,template:'<div style="width:100%; height:400px"></div>'}}]).directive("matchesPsmOneLiner",["pviz",function(a){return{restrict:"E",template:'<div class="psm-one-liner">{{detailedPSM.pep.sequence}} <small>({{detailedPSM.matchInfo.scoreMap["Mascot:score"]}})</small></div>'}}]),angular.module("matches").controller("PsmListCtrl",["$scope","$q","_","fishtones","spectrumService",function(a,b,c,d,e){a.$on("psmAddSelected",function(b,c){a.addSelectedPSM(c)}),a.selectedMatches=[],a.addSelectedPSM=function(b){c.contains(a.selectedMatches,b)||(b.fishTones={richSeq:(new d.dry.RichSequence).fromString(b.pep.sequence)},c.each(b.pep.modificationNames,function(a,e){c.each(a,function(a){console.log("adding modif",e-1,a),b.fishTones.richSeq.addModification(e-1,d.dry.ResidueModificationDictionary.get(a))})}),console.log(b.fishTones.richSeq),b.fishTones.theoMoz=d.dry.MassBuilder.computeMassRichSequence(b.fishTones.richSeq),e.findByRunIdAndId(b.spectrumId.runId,b.spectrumId.id).then(function(c){var e=new d.wet.ExpMSMSSpectrum({precMoz:c.ref.precursor.moz,mozs:c.peaks.mozs,intensities:c.peaks.intensities,intensityRanks:c.peaks.intensityRanks});b.fishTones.spectrum=e,a.selectedMatches.push(b)}))}}]).directive("matchesPsmListDetails",["pviz",function(a){return{restrict:"E",templateUrl:"views/matches/searches/matchesPsmListDetails.html"}}]).factory("MatchesFishtonesPsmSpectrumView",["_","fishtones",function(a,b){var c=function(a,c){var d=this,e=new b.match.PSMAlignment({richSequence:c.richSeq,expSpectrum:c.spectrum});return new b.match.MatchSpectrumView({model:e,el:a,tol:1e3,xZoomable:!0}).render(),d};return c}]).directive("matchesFishtonesPsmSpectrum",["pviz","MatchesFishtonesPsmSpectrumView",function(a,b){var c=function(a,c){new b(c,a.fishtonespsm)};return{link:c,scope:{fishtonespsm:"="},restrict:"A",template:"<div ></div>"}}]),angular.module("matches").factory("SearchIdSet",["_",function(a){var b=function(){var a=this;return a._list={},a};return b.prototype.add=function(b){var c=this;return a.isArray(b)?(a.each(b,function(a){c.add(a)}),c):(c._list[b]=!0,c)},b.prototype.list=function(){return a.keys(this._list)},b.prototype.size=function(){return a.size(this._list)},b}]).service("searchService",["httpProxy",function(a){var b=function(){return this};return b.prototype.list=function(){return a.get("/match/searches")},new b}]).directive("matchesSearchSelect",function(){var a=function(a,b){};return{restrict:"E",link:a,templateUrl:"views/matches/searches/matchesSearchSelect.html"}}),angular.module("matches").service("matchesProteinRefService",["httpProxy",function(a){var b=function(){return this};return b.prototype.findBySearchId=function(b){return a.get("/match/proteins/"+b)},new b}]).directive("matchesProteinRefSelect",function(){var a=function(a,b){};return{restrict:"E",link:a,templateUrl:"views/matches/searches/matchesProteinRefSelect.html"}}),angular.module("sequences",["thirdparties","environment"]).service("sequenceService",["httpProxy",function(a){var b=function(){var a=this;return a};return b.prototype.get=function(b,c){return a.get("/sequence/"+c+"/"+b)},new b}]),angular.module("experimental",["thirdparties","environment"]).service("spectrumService",["$http","EnvConfig","httpProxy",function(a,b,c){var d=function(){return this};return d.prototype.findByRunIdAndId=function(a,b){return c.get("/exp/spectrum/"+a+"/"+b+"?sortByMoz=true")},new d}]);